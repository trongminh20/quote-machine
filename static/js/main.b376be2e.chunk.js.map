{"version":3,"sources":["AppContext.js","Components/Quote.jsx","Components/Button.jsx","App.js","index.js"],"names":["AppContext","createContext","AppContextProvider","props","useState","quote","setQuote","rdIndex","setRdIndex","stateValue","quoteState","rdIndexState","bgState","Provider","value","children","Quote","useContext","fetchQuote","a","fetch","rawData","json","data","useEffect","id","text","author","Button","_btnValue","_handleClick","_id","onMouseOver","e","onMouseLeave","onClick","className","App","console","log","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"4LAEaA,EAAaC,0BAEbC,EAAqB,SAAAC,GAC9B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,qBAA9B,mBAEMK,EAAa,CACfC,WAAY,CAACL,EAAOC,GACpBK,aAAc,CAACJ,EAASC,GACxBI,QAAS,CALb,YAOA,OAAO,cAACZ,EAAWa,SAAZ,CAAqBC,MAAOL,EAA5B,SACFN,EAAMY,YCZA,SAASC,IACpB,MAAqCC,qBAAWjB,GAAxCU,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aACpB,cAA0BD,EAA1B,GAAOL,EAAP,KAAcC,EAAd,KACA,cAA8BK,EAA9B,GAAOJ,EAAP,KAEMW,GAFN,KAEgB,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,+BADb,cACTC,EADS,gBAEIA,EAAQC,OAFZ,OAETC,EAFS,OAGfjB,EAASiB,EAAKhB,IAHC,2CAAH,sDAQhB,OAHAiB,qBAAU,WACNN,MACD,CAACX,IAEA,qCACI,mBAAGkB,GAAG,OAAN,SAAcpB,EAAMqB,OACpB,mBAAGD,GAAG,SAAN,SAAgBpB,EAAMsB,OAAStB,EAAMsB,OAAS,cCjB3C,SAASC,EAAT,GAAmD,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,aAAcC,EAAO,EAAPA,IAEtD,OACI,yBAAQC,YAAa,SAAAC,KACjBC,aAAc,SAAAD,KACdE,QAASL,EACTM,UAAU,MACVX,GAAIM,EAJR,cAIeF,KCLR,SAASQ,IACpB,MAAqCpB,qBAAWjB,GAAxCU,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aACpB,cAA0BD,EAA1B,GACA,GADA,UACA,YAA8BC,EAA9B,IAAgBH,GAAhB,WAMA,OACI,0BAASiB,GAAG,YAAZ,UACI,cAACT,EAAD,IACA,sBAAKoB,UAAU,OAAf,UACI,cAACR,EAAD,CAAQE,aAAc,WAAQQ,QAAQC,IAAI,UAAYR,IAAI,cAAcF,UAAU,UAClF,cAACD,EAAD,CAAQE,aAAc,WAR9BtB,EAAWgC,KAAKC,MAAsB,IAAhBD,KAAKE,YAQ0BX,IAAI,YAAYF,UAAU,oBCbvFc,IAASC,OAAO,cAAC,EAAD,UAAoB,cAACP,EAAD,MAA8BQ,SAASC,eAAe,W","file":"static/js/main.b376be2e.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react'\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = props => {\r\n    const [quote, setQuote] = useState({});\r\n    const [rdIndex, setRdIndex] = useState(1);\r\n    const [bgColor, setBgColor] = useState();\r\n\r\n    const stateValue = {\r\n        quoteState: [quote, setQuote],\r\n        rdIndexState: [rdIndex, setRdIndex],\r\n        bgState: [bgColor, setBgColor]\r\n    }\r\n    return <AppContext.Provider value={stateValue}>\r\n        {props.children}\r\n    </AppContext.Provider>\r\n}","import React, { useContext, useEffect } from 'react'\r\nimport { AppContext } from '../AppContext'\r\n\r\nexport default function Quote() {\r\n    const { quoteState, rdIndexState } = useContext(AppContext);\r\n    const [quote, setQuote] = quoteState;\r\n    const [rdIndex, setRdIndex] = rdIndexState;\r\n\r\n    const fetchQuote = async () => {\r\n        const rawData = await fetch(\"https://type.fit/api/quotes\");\r\n        const data = await rawData.json();\r\n        setQuote(data[rdIndex])\r\n    }\r\n    useEffect(() => {\r\n        fetchQuote();\r\n    }, [rdIndex])\r\n    return (\r\n        <>\r\n            <p id=\"text\">{quote.text}</p>\r\n            <p id=\"author\">{quote.author ? quote.author : \"Unknow\"}</p>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { btnMouseCover, btnMouseLeave } from \"../Events/ButtonEvents\"\r\nexport default function Button({ _btnValue, _handleClick, _id }) {\r\n\r\n    return (\r\n        <button onMouseOver={e => btnMouseCover(e, \"\", \"\")}\r\n            onMouseLeave={e => btnMouseLeave(e, \"\", \"\")}\r\n            onClick={_handleClick}\r\n            className=\"btn\"\r\n            id={_id}> {_btnValue}\r\n        </button>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport Quote from './Components/Quote'\r\nimport Button from './Components/Button'\r\nimport { AppContext } from './AppContext'\r\nexport default function App() {\r\n    const { quoteState, rdIndexState } = useContext(AppContext);\r\n    const [quote, setQuote] = quoteState;\r\n    const [rdIndex, setRdIndex] = rdIndexState;\r\n\r\n    const generateIndex = () => {\r\n        setRdIndex(Math.floor(Math.random() * 200));\r\n    }\r\n\r\n    return (\r\n        <section id=\"quote-box\">\r\n            <Quote />\r\n            <div className=\"btns\">\r\n                <Button _handleClick={() => { console.log(\"tweet\") }} _id=\"tweet-quote\" _btnValue=\"tweet\" />\r\n                <Button _handleClick={() => generateIndex()} _id=\"new-quote\" _btnValue=\"New Quote\" />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\nimport { AppContextProvider } from './AppContext';\r\n\r\nReactDOM.render(<AppContextProvider><App /></AppContextProvider>, document.getElementById('root'));\r\n"],"sourceRoot":""}